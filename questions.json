{
  "theoryQuestionsData": [
    { "id": 1, "category": "Độ phức tạp thuật toán", "text": "Độ phức tạp thời gian của thuật toán tìm kiếm nhị phân (Binary Search) là:", "type": "mcq", "name": "q1", "options": [ { "value": "A", "label": "O(1)" }, { "value": "B", "label": "O(n)" }, { "value": "C", "label": "O(log n)" }, { "value": "D", "label": "O(n log n)" } ] },
    { "id": 2, "category": "Cấu trúc dữ liệu", "text": "Cấu trúc dữ liệu nào nên được sử dụng khi cần thực hiện các hoạt động \"Last-In-First-Out\" (LIFO)?", "type": "mcq", "name": "q2", "options": [ { "value": "A", "label": "Queue" }, { "value": "B", "label": "Stack" }, { "value": "C", "label": "Linked List" }, { "value": "D", "label": "Binary Tree" } ] },
    { "id": 3, "category": "Nguyên tắc lập trình", "text": "Nguyên tắc DRY trong lập trình có nghĩa là:", "type": "mcq", "name": "q3", "options": [ { "value": "A", "label": "Don't Repeat Yourself" }, { "value": "B", "label": "Data Redundancy Yield" }, { "value": "C", "label": "Debug Rigorously Yourself" }, { "value": "D", "label": "Define Resources Yearly" } ] },
    { "id": 4, "category": "Lập trình hướng đối tượng", "text": "Đâu KHÔNG phải là một trong bốn nguyên tắc cơ bản của lập trình hướng đối tượng?", "type": "mcq", "name": "q4", "options": [ { "value": "A", "label": "Tính kế thừa (Inheritance)" }, { "value": "B", "label": "Tính bao đóng (Encapsulation)" }, { "value": "C", "label": "Tính đa hình (Polymorphism)" }, { "value": "D", "label": "Tính tuần tự (Sequentiality)" } ] },
    { "id": 5, "category": "Xử lý lỗi", "text": "Đúng hay Sai: Exception handling (xử lý ngoại lệ) là một phương pháp để xử lý lỗi syntax trong quá trình biên dịch", "type": "mcq", "name": "q5", "options": [ { "value": "True", "label": "Đúng" }, { "value": "False", "label": "Sai" } ] },
    { "id": 6, "category": "Thuật toán", "text": "Thuật toán sắp xếp nào sau đây có độ phức tạp thời gian trường hợp tệ nhất là O(n²)?", "type": "mcq", "name": "q6", "options": [ { "value": "A", "label": "Merge Sort" }, { "value": "B", "label": "Bubble Sort" }, { "value": "C", "label": "Heap Sort" }, { "value": "D", "label": "Quick Sort (trường hợp xấu nhất)" } ] },
    { "id": 7, "category": "Kiểu dữ liệu và cấu trúc dữ liệu", "text": "Hash table sử dụng cơ chế nào để lưu trữ và truy xuất dữ liệu?", "type": "mcq", "name": "q7", "options": [ { "value": "A", "label": "Indexing" }, { "value": "B", "label": "Hashing function" }, { "value": "C", "label": "Sequential searching" }, { "value": "D", "label": "Binary search" } ] },
    { "id": 8, "category": "Nguyên tắc thiết kế phần mềm", "text": "Nguyên tắc \"SOLID\" trong thiết kế phần mềm hướng đối tượng bao gồm những nguyên tắc nào? Chọn đáp án đúng.", "type": "mcq", "name": "q8", "options": [ { "value": "A", "label": "Single responsibility, Open-closed, Liskov substitution, Interface segregation, Dependency inversion" }, { "value": "B", "label": "Structured programming, Object-oriented design, Logical flow, Iterative development, Data abstraction" }, { "value": "C", "label": "Syntax checking, Optimization, Logic verification, Integrated testing, Documentation" }, { "value": "D", "label": "Security, Optimization, Logical design, Inheritance, Debugging" } ] }
  ],
  "practicalQuestionsData": [
    { "id": 9, "category": "Xử lý mảng/danh sách", "text": "Viết một thuật toán để tìm phần tử lớn thứ hai trong một mảng số nguyên không sắp xếp. Không được sắp xếp mảng.", "type": "textarea", "name": "q9", "placeholder": "Viết thuật toán của bạn vào đây...", "rows": 8 },
    { "id": 10, "category": "Xử lý chuỗi", "text": "Viết thuật toán để kiểm tra một chuỗi có phải là palindrome hay không (đọc xuôi ngược đều giống nhau), không phân biệt hoa thường và bỏ qua các ký tự không phải chữ cái.", "type": "textarea", "name": "q10", "placeholder": "Viết thuật toán của bạn vào đây...", "rows": 8 },
    { "id": 11, "category": "Đệ quy", "text": "Viết hàm đệ quy để tính số Fibonacci thứ n. Sau đó, thảo luận về nhược điểm của giải pháp đệ quy này và đề xuất một phương pháp cải tiến.", "type": "textarea", "name": "q11", "placeholder": "Viết hàm, thảo luận và đề xuất cải tiến...", "rows": 10 },
    { "id": 12, "category": "Thuật toán tìm kiếm", "text": "Phân tích và viết thuật toán tìm kiếm nhị phân (Binary Search). Nêu rõ điều kiện tiên quyết và độ phức tạp của thuật toán.", "type": "textarea", "name": "q12", "placeholder": "Phân tích và viết thuật toán...", "rows": 10 },
    { "id": 13, "category": "Sửa lỗi", "text": "Đoạn code sau đây có lỗi logic. Hãy tìm và sửa lỗi: <br><code>function isPrime(n):<br>  if n <= 1: return false<br>  if n <= 3: return true<br>  if n % 2 == 0: return false<br>  i = 3<br>  while i < n:<br>    if n % i == 0: return false<br>    i = i + 2<br>  return true</code>", "type": "textarea", "name": "q13", "placeholder": "Nêu lỗi và viết code đã sửa...", "rows": 10 },
    { "id": 14, "category": "Lập trình hướng đối tượng", "text": "Thiết kế một hệ thống quản lý thư viện đơn giản sử dụng các nguyên tắc OOP. Hãy xác định các lớp, mối quan hệ giữa chúng và các phương thức chính.", "type": "textarea", "name": "q14", "placeholder": "Mô tả thiết kế OOP của bạn...", "rows": 12 },
    { "id": 15, "category": "Xử lý ngoại lệ", "text": "Viết pseudocode để xử lý các ngoại lệ trong một hàm chia hai số, bao gồm xử lý trường hợp chia cho 0 và kiểm tra đầu vào không phải số.", "type": "textarea", "name": "q15", "placeholder": "Viết pseudocode xử lý ngoại lệ...", "rows": 8 },
    { "id": 16, "category": "Tối ưu hóa code", "text": "Đoạn code sau đây tính tổng các số chẵn trong một mảng. Hãy tối ưu hóa nó và giải thích sự cải tiến.<br><code>function sumEvenNumbers(array):<br>  sum = 0<br>  for i from 0 to length(array)-1:<br>    current = array[i]<br>    if current % 2 == 0:<br>      isEven = true<br>    else:<br>      isEven = false<br>    if isEven == true:<br>      sum = sum + current<br>  return sum</code>", "type": "textarea", "name": "q16", "placeholder": "Viết code tối ưu và giải thích...", "rows": 10 },
    { "id": 17, "category": "Stack và Queue", "text": "Viết một thuật toán để kiểm tra dấu ngoặc trong một biểu thức có cân bằng hay không. Ví dụ: \"{[()]}\" là cân bằng, \"{[(]}\" không cân bằng.", "type": "textarea", "name": "q17", "placeholder": "Viết thuật toán của bạn...", "rows": 10 },
    { "id": 18, "category": "Xử lý file", "text": "Mô tả thuật toán để đọc một file text, đếm số lần xuất hiện của mỗi từ và xuất kết quả ra file mới, sắp xếp theo tần suất giảm dần.", "type": "textarea", "name": "q18", "placeholder": "Mô tả thuật toán xử lý file...", "rows": 10 },
    { "id": 19, "category": "Phân tích thuật toán", "text": "Phân tích độ phức tạp về thời gian và không gian của thuật toán sau:<br><code>function mystery(arr, n):<br>  if n <= 0: return 0<br>  result = 0<br>  for i from 0 to n-1:<br>    for j from i to n-1:<br>      result += arr[i] * arr[j]<br>  return result</code>", "type": "textarea", "name": "q19", "placeholder": "Phân tích độ phức tạp...", "rows": 8 },
    { "id": 20, "category": "Bài tập tổng hợp", "text": "Viết thuật toán để tìm đường đi ngắn nhất trong một ma trận từ góc trên bên trái đến góc dưới bên phải. Chỉ được di chuyển xuống hoặc sang phải. Mỗi ô chứa một giá trị chi phí khi đi qua ô đó.", "type": "textarea", "name": "q20", "placeholder": "Viết thuật toán của bạn...", "rows": 10 }
  ]
}